map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80;


    # letsencrypt certbot
    location /.well-known/acme-challenge/ {
        access_log off;
        log_not_found off;
        root /var/www/certbot;
    }
    
    location / {
        access_log off;
        log_not_found off;
        return 301 https://$host$request_uri;
    } 
}


server {
    #DoS protection
    # limit_conn addr 20;

    server_tokens off;
    autoindex off;
    sendfile on;    
    tcp_nopush on;
    tcp_nodelay on;
    client_body_timeout 10;
    client_header_timeout 10;
    send_timeout 10;
    keepalive_timeout  20 15;

    open_file_cache max=5000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;


    listen 443 ssl;
    # listen 80;
    http2 on;
    charset utf-8;
    client_max_body_size 25M;

    ssl_certificate /etc/letsencrypt/live/app.automatyk.pwr.edu.pl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/app.automatyk.pwr.edu.pl/privkey.pem;


    include /etc/nginx/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/nginx/letsencrypt/ssl-dhparams.pem;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    include mime.types;
    types {
        application/manifest+json  webmanifest;
    }

    error_page 500 502 503 504 /errorDocuments/500.html;
    error_page 404 /errorDocuments/404.html;
    error_page 403 /errorDocuments/403.html;
    error_page 400 /errorDocuments/400.html;
    error_page 401 /errorDocuments/401.html;

    location /errorDocuments {
        access_log off;
        log_not_found off;
        root /etc/nginx/html;
    }
    

    location /static {
        access_log off;
        log_not_found off;
        root /usr/share/nginx/html;
    }
    location /media {
        access_log off;
        log_not_found off;
        root /usr/share/nginx/html;
    }
    location ~* .(png|ico|gif|jpg|jpeg|css|js|webmanifest|svg|xml|txt)$ {
        access_log off;
        log_not_found off;
        root /usr/share/nginx/html;
    }

    # assume that everything else is handled by the application router, by injecting the index.html.
    location / {
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_pass http://web:8000;

        add_header Cache-Control "private, no-cache, no-store, must-revalidate";

    }
}
